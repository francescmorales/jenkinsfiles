#!groovy
import hudson.*
import hudson.model.*
import jenkins.*
import jenkins.model.*

def pipelineName
def pipelinePath
def pipelineType
def gitURL
def slavePath

node('master'){
	stage('readProperties'){
		def envs = readProperties  file: "${WORKSPACE}/../properties/config.properties"
		echo "envs: ${envs}"
		pipelineName = envs.pipelineName
		pipelinePath = envs.pipelinePath
		pipelineType = envs.pipelineType
		gitURL = envs.gitURL
		slavePath = envs.slavePath
	}
}
node('docker-slave'){
    stage('Clone_Git'){
		git url: "${gitURL}", branch: 'develop'
    }
    stage('Build'){
        sh "docker build -t test ${slavePath}"
    }
    stage('Deploy_Artifact'){
		//sh 'docker login -u admin -p password docker-virtual.art.local'
		//sh 'docker push docker-virtual.art.local/basic-image-builder'
		
		// Create the upload spec.
		def uploadSpec = """{
				"files": [
						{
							"pattern": "Dockerfile",
							"target": "dockerfiles",
							"recursive": "false"
						}
					]
				}"""
				
		def buildInfo = Artifactory.newBuildInfo()
		buildInfo.setName "Test/Dockerfile"
		def server = Artifactory.server 'artifactory-local'
		server.upload spec: uploadSpec, buildInfo: buildInfo
		server.publishBuildInfo buildInfo
    }
}